@model workwise.Models.Category

@{
    ViewData["Title"] = "Edit Category";
}

<div class="d-flex align-items-center mb-4">
    <a asp-action="Index" class="btn btn-outline-secondary me-3">
        ‚Üê Back
    </a>
    <div>
        <h1 class="h3 text-dark fw-normal mb-1">Edit Category</h1>
        <p class="text-muted small mb-0">Update category name and color settings</p>
    </div>
</div>

<div class="row justify-content-center mb-7">
    <div class="col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body p-4">
                <form asp-action="Edit" id="categoryForm">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger border-0 rounded-0 mb-4"></div>

                    <input type="hidden" asp-for="Id" />

                    <div class="mb-4">
                        <label asp-for="Name" class="form-label text-dark fw-normal">
                            Category Name
                        </label>
                        <input asp-for="Name" class="form-control border-0 bg-light"
                               placeholder="Enter category name"
                               maxlength="50" required />
                        <span asp-validation-for="Name" class="text-danger small"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Color" class="form-label text-dark fw-normal">
                            Color
                        </label>

                        <div class="color-picker-container">
                            <div class="d-flex flex-wrap gap-2 mb-3">
                                @{
                                    var predefinedColors = new[] {
                                        "#1a1a1a", "#6c757d", "#0d6efd", "#198754",
                                        "#dc3545", "#fd7e14", "#ffc107", "#6f42c1",
                                        "#d63384", "#20c997", "#0dcaf0", "#f8f9fa"
                                    };
                                }

                                @foreach (var color in predefinedColors)
                                {
                                    <div>
                                        <input type="radio" class="btn-check color-option"
                                               name="Color" value="@color" id="color-@color.Replace("#", "")"
                                               @(Model.Color == color ? "checked" : "") />
                                        <label class="color-swatch"
                                               for="color-@color.Replace("#", "")"
                                               style="background-color: @color;">
                                        </label>
                                    </div>
                                }
                            </div>

                            <div class="mb-3">
                                <div class="input-group">
                                    <input type="color" asp-for="Color" class="form-control form-control-color border-0"
                                           id="customColor" />
                                    <input type="text" class="form-control border-0 bg-light" id="colorValue"
                                           value="@Model.Color" readonly />
                                </div>
                            </div>
                        </div>

                        <span asp-validation-for="Color" class="text-danger small"></span>
                    </div>

                    <div class="mb-4">
                        <label class="form-label text-dark fw-normal">Preview</label>
                        <div class="border bg-light p-3 rounded">
                            <div class="d-flex align-items-center">
                                <div id="preview-color" class="rounded-circle me-3"
                                     style="width: 12px; height: 12px; background-color: @Model.Color;"></div>
                                <span id="preview-name" class="text-dark">@Model.Name</span>
                            </div>
                        </div>
                    </div>

                    @if (Model.Tasks != null && Model.Tasks.Any())
                    {
                        <div class="alert alert-light border mb-4" role="alert">
                            <strong>Note:</strong> This category contains @Model.Tasks.Count task(s).
                            Changes will apply to all associated tasks.
                        </div>
                    }

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-dark flex-fill">
                            Update Category
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <div class="border rounded p-4 bg-light mt-4">
            <div class="row text-center">
                <div class="col-6">
                    <div class="mb-2">
                        <span class="h5 text-dark mb-0">@(Model.Tasks?.Count ?? 0)</span>
                    </div>
                    <small class="text-muted">Associated Tasks</small>
                </div>
                <div class="col-6">
                    <div class="mb-2">
                        <span class="h5 text-dark mb-0">@Model.CreatedDate.ToString("MMM dd, yyyy")</span>
                    </div>
                    <small class="text-muted">Created</small>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function() {
            // Initialize the page
            updateColorSelection();
            
            // Update preview when name changes
            $('#Name').on('input', function() {
                var name = $(this).val() || 'Category Name';
                $('#preview-name').text(name);
            });

            // Update preview and form when predefined color is selected
            $('.color-option').on('change', function() {
                var selectedColor = $(this).val();
                updateColorPreview(selectedColor);
                $('#customColor').val(selectedColor);
                $('#colorValue').val(selectedColor);
                updateColorSelection();
            });

            // Update preview when custom color is selected
            $('#customColor').on('change', function() {
                var selectedColor = $(this).val();
                updateColorPreview(selectedColor);
                $('#colorValue').val(selectedColor);
                $('.color-option').prop('checked', false);
                updateColorSelection();
            });

            // Form validation
            $('#categoryForm').on('submit', function(e) {
                var name = $('#Name').val().trim();
                if (name.length === 0) {
                    e.preventDefault();
                    $('#Name').focus();
                    return false;
                }
            });

            function updateColorPreview(color) {
                $('#preview-color').css('background-color', color);
            }

            function updateColorSelection() {
                $('.color-swatch').removeClass('selected');
                $('.color-option:checked').next('.color-swatch').addClass('selected');
            }
        });
    </script>

    <style>
        .color-swatch {
            display: inline-block;
            width: 32px;
            height: 32px;
            border-radius: 6px;
            border: 2px solid #e9ecef;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .color-swatch:hover {
            border-color: #adb5bd;
            transform: scale(1.1);
        }

        .color-swatch.selected {
            border-color: #1a1a1a;
            border-width: 3px;
            transform: scale(1.1);
        }

        .form-control:focus {
            border-color: #1a1a1a;
            box-shadow: 0 0 0 0.2rem rgba(26, 26, 26, 0.1);
        }

        .btn-dark:focus {
            box-shadow: 0 0 0 0.2rem rgba(26, 26, 26, 0.25);
        }
    </style>
}